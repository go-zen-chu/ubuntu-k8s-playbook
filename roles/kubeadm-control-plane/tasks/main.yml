- name: Reset kubeadm
  shell:
    cmd: kubeadm reset -f
  become: True

- name: Start kubernetes control plane
  shell:
    cmd: |
        kubeadm init --control-plane-endpoint={{control_plane_ip}} \
        --pod-network-cidr=10.244.0.0/16 \
        --node-name={{kubeadm_control_plane_node_name}} \
        --cri-socket=unix:///var/run/containerd/containerd.sock
  register: kubeadm_init_result
  failed_when: |
    ("Your Kubernetes control-plane has initialized successfully" not in kubeadm_init_result.stdout)
  become: True

- name: Ensure /home/ansible/.kube exists
  file:
    path: /home/ansible/.kube
    state: directory
    owner: ansible
    group: wheel
    mode: '0755'

- name: Copy kubectl config from kubeadm init result
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ansible/.kube/config
    owner: ansible
    group: wheel
    mode: '0644'
    remote_src: yes
  become: True

- name: Pause 30s while kube-apiserver starts running
  pause:
    seconds: 30

# TIPS: without CNI, you will get `Network plugin returns error: cni plugin not initialized` log in kubelet's log
# https://github.com/flannel-io/flannel#deploying-flannel-manually
- name: Ensure /home/ansible/k8s exists
  file:
    path: /home/ansible/k8s
    state: directory
    owner: ansible
    group: wheel
    mode: '0755'
  become: True

- name: Generate flannel manifest from template
  template:
    src: kube-flannel.yml
    dest: /home/ansible/k8s/kube-flannel.yml
    owner: ansible
    group: wheel
    mode: '0644'

- name: Apply flannel as kubernetes cni
  shell:
    cmd: kubectl apply -f /home/ansible/k8s/kube-flannel.yml
